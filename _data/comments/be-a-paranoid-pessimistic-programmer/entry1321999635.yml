{_id: 70458, approved: 1, date: 1321999635, email: db0eafd3406f356d4b8f9c6fc5f5a621,
  karma: 0, message: "I've been practicing this approach for about ten years now --\
    \ looking first at the hardest-case scenarios for clients, then after jotting\
    \ them down, giving a rough outline of difficulty without actually going into\
    \ nitty-gritty detail. \r\n\r\nI have to tell ya, it hasn't worked out as well\
    \ as I thought. My clients like to joke that every time I say something will take\
    \ a lot of thought, it seems to them like all I had to do was think about it a\
    \ little and the solution magically appeared. Like, the less detail I gave them\
    \ over time about the specific problems, the more they assumed the job was automatic;\
    \ to the point that when there was a problem, they couldn't understand where it\
    \ was coming from.\r\n\r\nYou're trying to convince whining coders to stop dropping\
    \ their problems into the client's lap, and I think that's fair. At the same time,\
    \ there's a drawback to setting your clients' expectations unreasonably high by\
    \ never mentioning what it took to do something.\r\n\r\nMy solution, as it's been,\
    \ has been to estimate and gauge the scope of the problems and give a non-technical\
    \ outline before starting the work, and then as I learned the hard way, to make\
    \ sure I pound the client with all kinds of gruesome technical details about how\
    \ hard it was after the work is done. That way at least they know what they spent\
    \ their money on. Otherwise we really run the risk of being taken for granted.",
  name: Josh Strike, parent: 0, post_ID: 722, subscribe: N, url: 'http://thestrikeagency.com'}
